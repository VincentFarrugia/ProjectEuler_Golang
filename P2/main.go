/*------------------------------------------------------------------------------------------------*
PROJECT EULER:
Problem ID: 2
Title: Even Fibonacci Numbers
Description:
Each new term in the Fibonacci sequence is generated by adding the previous two terms.package main
By starting with 1 and 2, the first 10 terms will be: 1,2,3,5,8,13,21,34,55,89
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
Code Author: Vincent Farrugia
*------------------------------------------------------------------------------------------------*/

package main

import (
	"fmt"
	"math"
	"time"
)

func main() {

	start := time.Now()
	simplifiedAttempt()
	elapsed := time.Since(start)
	fmt.Printf("Operation took %vns\n", elapsed.Nanoseconds())
}

func simplifiedAttempt() {
	exclusiveLimit := 4000000
	sumOfEvenTerms := 0
	fibTermA := 1
	fibTermB := 1
	currentEvenFibTerm := fibTermA + fibTermB
	for currentEvenFibTerm < exclusiveLimit {
		sumOfEvenTerms += currentEvenFibTerm
		fibTermA = fibTermB + currentEvenFibTerm
		fibTermB = currentEvenFibTerm + fibTermA
		currentEvenFibTerm = fibTermA + fibTermB
	}
	fmt.Printf("The Sum of the Even-valued Fibonacci numbers in the range (%d : %d] is: %d\n", 0, exclusiveLimit, sumOfEvenTerms)
}

func equationAttempt() {

	exclusiveLimit := 4000000
	currentFibTerm := 2

	kGoldenRatio := ((1 + math.Sqrt(5.0)) * 0.5)
	kOneOverSqrtFive := (1.0 / math.Sqrt(5.0))
	sumOfEvenTerms := 0

	for n := 2; currentFibTerm < exclusiveLimit; n += 3 {
		nthFibTerm := kOneOverSqrtFive * math.Pow(kGoldenRatio, float64(n+1.0))
		if nthFibTerm-math.Floor(nthFibTerm) < 0.5 {
			nthFibTerm = math.Floor(nthFibTerm)
		} else {
			nthFibTerm = math.Ceil(nthFibTerm)
		}
		currentFibTerm = int(nthFibTerm)
		if currentFibTerm < exclusiveLimit {
			sumOfEvenTerms += currentFibTerm
		}
	}

	fmt.Printf("The Sum of the Even-valued Fibonacci numbers in the range (%d : %d] is: %d\n", 0, exclusiveLimit, sumOfEvenTerms)
}

func firstAttempt() {
	exclusiveLimit := 4000000
	firstFibTerm := 1
	secondFibTerm := 2

	prevFibTerm := firstFibTerm
	currentFibTerm := secondFibTerm
	sumOfEvenTerms := 0
	tmpStore := 0

	for currentFibTerm < exclusiveLimit {

		if (currentFibTerm % 2) == 0 {
			sumOfEvenTerms += currentFibTerm
		}
		tmpStore = currentFibTerm
		currentFibTerm += prevFibTerm
		prevFibTerm = tmpStore
	}

	fmt.Printf("The Sum of the Even-valued Fibonacci numbers in the range (%d : %d] is: %d\n", firstFibTerm-1, exclusiveLimit, sumOfEvenTerms)
}
